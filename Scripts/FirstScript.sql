CREATE TABLE [dbo].[UserProfile] (
    [UserId] [int] NOT NULL IDENTITY,
    [UserName] [nvarchar](max),
    CONSTRAINT [PK_dbo.UserProfile] PRIMARY KEY ([UserId])
)
CREATE TABLE [dbo].[Vendors] (
    [Id] [int] NOT NULL IDENTITY,
    [Name] [nvarchar](max) NOT NULL,
    [Address] [nvarchar](max) NOT NULL,
    [ContactNo] [nvarchar](max) NOT NULL,
    [IsDeleted] [bit] NOT NULL,
    [Due] [int] NOT NULL,
    CONSTRAINT [PK_dbo.Vendors] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[Farmers] (
    [Id] [int] NOT NULL IDENTITY,
    [Name] [nvarchar](max) NOT NULL,
    [Address] [nvarchar](max) NOT NULL,
    [ContactNo] [nvarchar](max) NOT NULL,
    [IsActive] [bit] NOT NULL,
    [IsDeleted] [bit] NOT NULL,
    CONSTRAINT [PK_dbo.Farmers] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[Items] (
    [Id] [int] NOT NULL IDENTITY,
    [Name] [nvarchar](max) NOT NULL,
    [Type] [int] NOT NULL,
    [Unit] [nvarchar](max) NOT NULL,
    [IsDeleted] [bit] NOT NULL,
    CONSTRAINT [PK_dbo.Items] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[Stocks] (
    [Id] [int] NOT NULL IDENTITY,
    [Quantity] [int] NOT NULL,
    [Item_Id] [int],
    CONSTRAINT [PK_dbo.Stocks] PRIMARY KEY ([Id])
)
CREATE INDEX [IX_Item_Id] ON [dbo].[Stocks]([Item_Id])
CREATE TABLE [dbo].[VendorLogs] (
    [Id] [int] NOT NULL IDENTITY,
    [Date] [datetime] NOT NULL,
    [Payment] [int] NOT NULL,
    [PaymentMode] [nvarchar](max),
    [FolioNo] [nvarchar](max),
    [Vendor_Id] [int],
    CONSTRAINT [PK_dbo.VendorLogs] PRIMARY KEY ([Id])
)
CREATE INDEX [IX_Vendor_Id] ON [dbo].[VendorLogs]([Vendor_Id])
CREATE TABLE [dbo].[ItemTransactions] (
    [Id] [int] NOT NULL IDENTITY,
    [Qty] [int] NOT NULL,
    [Price] [int] NOT NULL,
    [Item_Id] [int],
    [VendorLog_Id] [int],
    [FarmerLog_Id] [int],
    CONSTRAINT [PK_dbo.ItemTransactions] PRIMARY KEY ([Id])
)
CREATE INDEX [IX_Item_Id] ON [dbo].[ItemTransactions]([Item_Id])
CREATE INDEX [IX_VendorLog_Id] ON [dbo].[ItemTransactions]([VendorLog_Id])
CREATE INDEX [IX_FarmerLog_Id] ON [dbo].[ItemTransactions]([FarmerLog_Id])
CREATE TABLE [dbo].[FarmerLogs] (
    [Id] [int] NOT NULL IDENTITY,
    [Date] [datetime] NOT NULL,
    [Payment] [int] NOT NULL,
    [PaymentMethod] [nvarchar](max),
    [ActivityFlag] [bit] NOT NULL,
    [Lifted] [int] NOT NULL,
    [TotalDeath] [int] NOT NULL,
    [Farmer_Id] [int],
    CONSTRAINT [PK_dbo.FarmerLogs] PRIMARY KEY ([Id])
)
CREATE INDEX [IX_Farmer_Id] ON [dbo].[FarmerLogs]([Farmer_Id])
CREATE TABLE [dbo].[TraderLogs] (
    [Id] [int] NOT NULL IDENTITY,
    [ChickenCount] [int] NOT NULL,
    [Price] [int] NOT NULL,
    [Payment] [int] NOT NULL,
    [PaymentMethod] [nvarchar](max),
    [Trader_Id] [int],
    CONSTRAINT [PK_dbo.TraderLogs] PRIMARY KEY ([Id])
)
CREATE INDEX [IX_Trader_Id] ON [dbo].[TraderLogs]([Trader_Id])
CREATE TABLE [dbo].[Traders] (
    [Id] [int] NOT NULL IDENTITY,
    [Name] [nvarchar](max) NOT NULL,
    [Address] [nvarchar](max) NOT NULL,
    [ContactNo] [nvarchar](max) NOT NULL,
    [IsDeleted] [bit] NOT NULL,
    [PaymentDue] [int] NOT NULL,
    CONSTRAINT [PK_dbo.Traders] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[ConsumptionLogs] (
    [Id] [int] NOT NULL IDENTITY,
    [Date] [datetime] NOT NULL,
    [Quantity] [int] NOT NULL,
    [Ratio] [int] NOT NULL,
    [For_Id] [int],
    [Item_Id] [int],
    CONSTRAINT [PK_dbo.ConsumptionLogs] PRIMARY KEY ([Id])
)
CREATE INDEX [IX_For_Id] ON [dbo].[ConsumptionLogs]([For_Id])
CREATE INDEX [IX_Item_Id] ON [dbo].[ConsumptionLogs]([Item_Id])
CREATE TABLE [dbo].[CostSheets] (
    [Id] [int] NOT NULL IDENTITY,
    [Date] [datetime] NOT NULL,
    [RatePerKg] [int] NOT NULL,
    [BPS_Qty] [int] NOT NULL,
    [BPS_Amt] [int] NOT NULL,
    [BS_Qty] [int] NOT NULL,
    [BS_Amt] [int] NOT NULL,
    [BF_Qty] [int] NOT NULL,
    [BF_Amt] [int] NOT NULL,
    [Remarks] [nvarchar](max),
    [Item_Id] [int],
    CONSTRAINT [PK_dbo.CostSheets] PRIMARY KEY ([Id])
)
CREATE INDEX [IX_Item_Id] ON [dbo].[CostSheets]([Item_Id])
CREATE TABLE [dbo].[VendorPaymentLogs] (
    [Id] [int] NOT NULL IDENTITY,
    [Date] [datetime] NOT NULL,
    [Amount] [int] NOT NULL,
    [Vendor_Id] [int],
    CONSTRAINT [PK_dbo.VendorPaymentLogs] PRIMARY KEY ([Id])
)
CREATE INDEX [IX_Vendor_Id] ON [dbo].[VendorPaymentLogs]([Vendor_Id])
CREATE TABLE [dbo].[ProductionLogs] (
    [Id] [int] NOT NULL IDENTITY,
    [Date] [datetime] NOT NULL,
    [Qty] [int] NOT NULL,
    [Item_Id] [int],
    CONSTRAINT [PK_dbo.ProductionLogs] PRIMARY KEY ([Id])
)
CREATE INDEX [IX_Item_Id] ON [dbo].[ProductionLogs]([Item_Id])
CREATE TABLE [dbo].[WeeklyReports] (
    [Id] [int] NOT NULL IDENTITY,
    [WeekNo] [int] NOT NULL,
    [AvgWt] [int] NOT NULL,
    [Remarks] [nvarchar](max),
    [FCR] [nvarchar](max),
    [Day1_ChickCount] [int] NOT NULL,
    [Day1_DeathCountPerDay] [int] NOT NULL,
    [Day1_DeathRemarks] [nvarchar](max),
    [Day1_TotalDeathCount] [int] NOT NULL,
    [Day1_FoodConsumption] [real] NOT NULL,
    [Day1_AvgConsumption] [real] NOT NULL,
    [Day1_Remarks] [nvarchar](max),
    [Day1_InStock] [nvarchar](max),
    [Day1_CurrentWt] [real] NOT NULL,
    [Day1_FCR] [nvarchar](max),
    [Day2_ChickCount] [int] NOT NULL,
    [Day2_DeathCountPerDay] [int] NOT NULL,
    [Day2_DeathRemarks] [nvarchar](max),
    [Day2_TotalDeathCount] [int] NOT NULL,
    [Day2_FoodConsumption] [real] NOT NULL,
    [Day2_AvgConsumption] [real] NOT NULL,
    [Day2_Remarks] [nvarchar](max),
    [Day2_InStock] [nvarchar](max),
    [Day2_CurrentWt] [real] NOT NULL,
    [Day2_FCR] [nvarchar](max),
    [Day3_ChickCount] [int] NOT NULL,
    [Day3_DeathCountPerDay] [int] NOT NULL,
    [Day3_DeathRemarks] [nvarchar](max),
    [Day3_TotalDeathCount] [int] NOT NULL,
    [Day3_FoodConsumption] [real] NOT NULL,
    [Day3_AvgConsumption] [real] NOT NULL,
    [Day3_Remarks] [nvarchar](max),
    [Day3_InStock] [nvarchar](max),
    [Day3_CurrentWt] [real] NOT NULL,
    [Day3_FCR] [nvarchar](max),
    [Day4_ChickCount] [int] NOT NULL,
    [Day4_DeathCountPerDay] [int] NOT NULL,
    [Day4_DeathRemarks] [nvarchar](max),
    [Day4_TotalDeathCount] [int] NOT NULL,
    [Day4_FoodConsumption] [real] NOT NULL,
    [Day4_AvgConsumption] [real] NOT NULL,
    [Day4_Remarks] [nvarchar](max),
    [Day4_InStock] [nvarchar](max),
    [Day4_CurrentWt] [real] NOT NULL,
    [Day4_FCR] [nvarchar](max),
    [Day5_ChickCount] [int] NOT NULL,
    [Day5_DeathCountPerDay] [int] NOT NULL,
    [Day5_DeathRemarks] [nvarchar](max),
    [Day5_TotalDeathCount] [int] NOT NULL,
    [Day5_FoodConsumption] [real] NOT NULL,
    [Day5_AvgConsumption] [real] NOT NULL,
    [Day5_Remarks] [nvarchar](max),
    [Day5_InStock] [nvarchar](max),
    [Day5_CurrentWt] [real] NOT NULL,
    [Day5_FCR] [nvarchar](max),
    [Day6_ChickCount] [int] NOT NULL,
    [Day6_DeathCountPerDay] [int] NOT NULL,
    [Day6_DeathRemarks] [nvarchar](max),
    [Day6_TotalDeathCount] [int] NOT NULL,
    [Day6_FoodConsumption] [real] NOT NULL,
    [Day6_AvgConsumption] [real] NOT NULL,
    [Day6_Remarks] [nvarchar](max),
    [Day6_InStock] [nvarchar](max),
    [Day6_CurrentWt] [real] NOT NULL,
    [Day6_FCR] [nvarchar](max),
    [Day7_ChickCount] [int] NOT NULL,
    [Day7_DeathCountPerDay] [int] NOT NULL,
    [Day7_DeathRemarks] [nvarchar](max),
    [Day7_TotalDeathCount] [int] NOT NULL,
    [Day7_FoodConsumption] [real] NOT NULL,
    [Day7_AvgConsumption] [real] NOT NULL,
    [Day7_Remarks] [nvarchar](max),
    [Day7_InStock] [nvarchar](max),
    [Day7_CurrentWt] [real] NOT NULL,
    [Day7_FCR] [nvarchar](max),
    [SupervisionReport_Id] [int],
    CONSTRAINT [PK_dbo.WeeklyReports] PRIMARY KEY ([Id])
)
CREATE INDEX [IX_SupervisionReport_Id] ON [dbo].[WeeklyReports]([SupervisionReport_Id])
CREATE TABLE [dbo].[SupervisionReports] (
    [Id] [int] NOT NULL IDENTITY,
    [Log_Id] [int],
    [ExtraData_Id] [int],
    CONSTRAINT [PK_dbo.SupervisionReports] PRIMARY KEY ([Id])
)
CREATE INDEX [IX_Log_Id] ON [dbo].[SupervisionReports]([Log_Id])
CREATE INDEX [IX_ExtraData_Id] ON [dbo].[SupervisionReports]([ExtraData_Id])
CREATE TABLE [dbo].[ExtraDatas] (
    [Id] [int] NOT NULL IDENTITY,
    [Data1] [nvarchar](max),
    [Data2] [nvarchar](max),
    [Data3] [nvarchar](max),
    [Data4] [nvarchar](max),
    [Data5] [nvarchar](max),
    [Data6] [nvarchar](max),
    [Data7] [nvarchar](max),
    [Data8] [nvarchar](max),
    [Data9] [nvarchar](max),
    [Data10] [nvarchar](max),
    [Data11] [nvarchar](max),
    [Data12] [nvarchar](max),
    [Data13] [nvarchar](max),
    [Data14] [nvarchar](max),
    [Data15] [nvarchar](max),
    [Data16] [nvarchar](max),
    [Data17] [nvarchar](max),
    [Data18] [nvarchar](max),
    [Data19] [nvarchar](max),
    [Data20] [nvarchar](max),
    [Data21] [nvarchar](max),
    CONSTRAINT [PK_dbo.ExtraDatas] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[Liftings] (
    [Id] [int] NOT NULL IDENTITY,
    [Date] [datetime] NOT NULL,
    [DCNo] [nvarchar](max),
    [TotalWt] [nvarchar](max),
    [AvgWt] [nvarchar](max),
    [TraderLog_Id] [int],
    CONSTRAINT [PK_dbo.Liftings] PRIMARY KEY ([Id])
)
CREATE INDEX [IX_TraderLog_Id] ON [dbo].[Liftings]([TraderLog_Id])
ALTER TABLE [dbo].[Stocks] ADD CONSTRAINT [FK_dbo.Stocks_dbo.Items_Item_Id] FOREIGN KEY ([Item_Id]) REFERENCES [dbo].[Items] ([Id])
ALTER TABLE [dbo].[VendorLogs] ADD CONSTRAINT [FK_dbo.VendorLogs_dbo.Vendors_Vendor_Id] FOREIGN KEY ([Vendor_Id]) REFERENCES [dbo].[Vendors] ([Id])
ALTER TABLE [dbo].[ItemTransactions] ADD CONSTRAINT [FK_dbo.ItemTransactions_dbo.Items_Item_Id] FOREIGN KEY ([Item_Id]) REFERENCES [dbo].[Items] ([Id])
ALTER TABLE [dbo].[ItemTransactions] ADD CONSTRAINT [FK_dbo.ItemTransactions_dbo.VendorLogs_VendorLog_Id] FOREIGN KEY ([VendorLog_Id]) REFERENCES [dbo].[VendorLogs] ([Id])
ALTER TABLE [dbo].[ItemTransactions] ADD CONSTRAINT [FK_dbo.ItemTransactions_dbo.FarmerLogs_FarmerLog_Id] FOREIGN KEY ([FarmerLog_Id]) REFERENCES [dbo].[FarmerLogs] ([Id])
ALTER TABLE [dbo].[FarmerLogs] ADD CONSTRAINT [FK_dbo.FarmerLogs_dbo.Farmers_Farmer_Id] FOREIGN KEY ([Farmer_Id]) REFERENCES [dbo].[Farmers] ([Id])
ALTER TABLE [dbo].[TraderLogs] ADD CONSTRAINT [FK_dbo.TraderLogs_dbo.Traders_Trader_Id] FOREIGN KEY ([Trader_Id]) REFERENCES [dbo].[Traders] ([Id])
ALTER TABLE [dbo].[ConsumptionLogs] ADD CONSTRAINT [FK_dbo.ConsumptionLogs_dbo.Items_For_Id] FOREIGN KEY ([For_Id]) REFERENCES [dbo].[Items] ([Id])
ALTER TABLE [dbo].[ConsumptionLogs] ADD CONSTRAINT [FK_dbo.ConsumptionLogs_dbo.Items_Item_Id] FOREIGN KEY ([Item_Id]) REFERENCES [dbo].[Items] ([Id])
ALTER TABLE [dbo].[CostSheets] ADD CONSTRAINT [FK_dbo.CostSheets_dbo.Items_Item_Id] FOREIGN KEY ([Item_Id]) REFERENCES [dbo].[Items] ([Id])
ALTER TABLE [dbo].[VendorPaymentLogs] ADD CONSTRAINT [FK_dbo.VendorPaymentLogs_dbo.Vendors_Vendor_Id] FOREIGN KEY ([Vendor_Id]) REFERENCES [dbo].[Vendors] ([Id])
ALTER TABLE [dbo].[ProductionLogs] ADD CONSTRAINT [FK_dbo.ProductionLogs_dbo.Items_Item_Id] FOREIGN KEY ([Item_Id]) REFERENCES [dbo].[Items] ([Id])
ALTER TABLE [dbo].[WeeklyReports] ADD CONSTRAINT [FK_dbo.WeeklyReports_dbo.SupervisionReports_SupervisionReport_Id] FOREIGN KEY ([SupervisionReport_Id]) REFERENCES [dbo].[SupervisionReports] ([Id])
ALTER TABLE [dbo].[SupervisionReports] ADD CONSTRAINT [FK_dbo.SupervisionReports_dbo.FarmerLogs_Log_Id] FOREIGN KEY ([Log_Id]) REFERENCES [dbo].[FarmerLogs] ([Id])
ALTER TABLE [dbo].[SupervisionReports] ADD CONSTRAINT [FK_dbo.SupervisionReports_dbo.ExtraDatas_ExtraData_Id] FOREIGN KEY ([ExtraData_Id]) REFERENCES [dbo].[ExtraDatas] ([Id])
ALTER TABLE [dbo].[Liftings] ADD CONSTRAINT [FK_dbo.Liftings_dbo.TraderLogs_TraderLog_Id] FOREIGN KEY ([TraderLog_Id]) REFERENCES [dbo].[TraderLogs] ([Id])
CREATE TABLE [dbo].[__MigrationHistory] (
    [MigrationId] [nvarchar](255) NOT NULL,
    [Model] [varbinary](max) NOT NULL,
    [ProductVersion] [nvarchar](32) NOT NULL,
    CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY ([MigrationId])
)
BEGIN TRY
    EXEC sp_MS_marksystemobject 'dbo.__MigrationHistory'
END TRY
BEGIN CATCH
END CATCH
INSERT INTO [__MigrationHistory] ([MigrationId], [Model], [ProductVersion]) VALUES ('201501162117152_FirstMigration', net45')
