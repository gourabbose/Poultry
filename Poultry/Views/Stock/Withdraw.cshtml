@model IEnumerable<Poultry.Models.ViewModels.Consumption>
@{
    ViewBag.Title = "Withdraw for Daily Consumptions";
    var _itemList = (SelectList)ViewBag.ItemList;
    var _vendorList = (SelectList)ViewBag.VendorList;
    var _foodList = (SelectList)ViewBag.FoodList;
}
@section scripts{
    <style>
        input, textarea {
            background: none repeat scroll 0 0 #fff;
            border: 1px solid #e2e2e2;
            color: #333;
            font-size: 1.2em;
            margin: 5px 0 6px;
            padding: 5px;
            width: 50px;
        }

        td {
            min-width: 10%;
        }

        .qty {
            width: 50%;
        }
    </style>
}




@using (Html.BeginForm("Withdraw", "Stock", FormMethod.Post, new { id = "WithdrawForm" }))
{
    <h2 style="float: left">Stock >> Withdraw >> Daily Consumptions on :</h2>
    
    <input type="text" style="margin-top: 23px; margin-left: 5px; width:20%" name="Date" class="datepicker" value="@DateTime.Now.ToString("dd-MMM-yyyy")">

    <div data-valmsg-summary="true" class="validation-summary-valid" id="validationSummary">
        <ul>
            <li style="display: none"></li>
        </ul>
    </div>
    <div>
        <table>
            <tbody id="container">
                <tr>
                    <th></th>
                    <th colspan="2">B/PS</th>
                    <th colspan="2">B/S</th>
                    <th colspan="2">B/F</th>
                    <th></th>
                    <th></th>
                </tr>
                <tr>
                    <td><strong>Items</strong></td>
                    <td><strong>Ratio</strong></td>
                    <td><strong>Quantity</strong></td>
                    <td><strong>Ratio</strong></td>
                    <td><strong>Quantity</strong></td>
                    <td><strong>Ratio</strong></td>
                    <td><strong>Quantity</strong></td>
                    <td><strong>Total</strong></td>
                    <td></td>
                </tr>
                <tr class="inputItems">
                    <td>
                        @Html.DropDownList("[0].Items.Id", _itemList, "Select Item", new { @class = "itemSelect" })
                        Available : <strong class="availableStock">- -</strong> <strong class="unit"></strong>
                        <input type="hidden" class="hidAvailableStock" />
                    </td>
                    <td>
                        <input type="text" name="[0].Ratio1" class="ratio1" />
                    </td>
                    <td>
                        <input type="text" name="[0].Qty1" class="qty qty1" /><strong class="unit"></strong>
                    </td>
                    <td>
                        <input type="text" name="[0].Ratio2" class="ratio2" />
                    </td>
                    <td>
                        <input type="text" name="[0].Qty2" class="qty qty2" /><strong class="unit"></strong>
                    </td>
                    <td>
                        <input type="text" name="[0].Ratio3" class="ratio3" />
                    </td>
                    <td>
                        <input type="text" name="[0].Qty3" class="qty qty3" /><strong class="unit"></strong>
                    </td>
                    <td>
                        <strong class="total">0</strong> <strong class="unit"></strong>
                        <input type="hidden" class="hidTotal" name="[0].TotalQty" />
                    </td>
                    <td>
                        <a href="javascript:void(0)" class="remove">Remove</a>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div style="float: left">
        <p>
            <input type="button" id="AddItemInput" value="Add More Item" />
        </p>
    </div>
    <div style="float: left">
        <p>
            <input id="btnSubmit" type="submit" value="Withdraw Stock" />
        </p>
    </div>

}
<table>
    <tbody style="display: none" id="temp">
        <tr class="inputItems">
            <td>
                @Html.DropDownList("[0].Items.Id", _itemList, "Select Item", new { @class = "itemSelect" })
                Available : <strong class="availableStock">- -</strong> <strong class="unit"></strong>
                <input type="hidden" class="hidAvailableStock" />
            </td>
            <td>
                <input type="text" name="[0].Ratio1" class="ratio1" />
            </td>
            <td>
                <input type="text" name="[0].Qty1" class="qty qty1" /><strong class="unit"></strong>
            </td>
            <td>
                <input type="text" name="[0].Ratio2" class="ratio2" />
            </td>
            <td>
                <input type="text" name="[0].Qty2" class="qty qty2" /><strong class="unit"></strong>
            </td>
            <td>
                <input type="text" name="[0].Ratio3" class="ratio3" />
            </td>
            <td>
                <input type="text" name="[0].Qty3" class="qty qty3" /><strong class="unit"></strong>
            </td>
            <td>
                <strong class="total">0</strong> <strong class="unit"></strong>
                <input type="hidden" class="hidTotal" name="[0].TotalQty" />
            </td>
            <td>
                <a href="javascript:void(0)" class="remove">Remove</a>
            </td>
        </tr>
    </tbody>
</table>
<script type="text/javascript">
    var itemRow;
    var item;
    $(document).ready(function () {
        $(".qty").attr('disabled', 'disabled');
        $('#AddItemInput').click(function () {
            $('#container').append($('#temp').html());
            ReOrder();
        });
        $(document).on('click', '.remove', function () {
            $(this).parent().parent().remove();
            ReOrder();
        });
        $(document).on('keydown', '.qty', function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)    ||
                (e.ctrlKey)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
        $(document).on('keyup', '.qty', function (e) {
            item = $(this);
            if (!isNaN(parseInt(e.keyCode)) || e.keyCode == 8) {
                //if (!isNaN(parseInt(e.keyCode))) $(item).val($(item).val() + e.keyCode);
                var qtyInputs = $(item).parent().parent().find('.qty');
                var total = 0;
                qtyInputs.each(function (e) {
                    if (!isNaN(parseInt($(this).val())))
                        total += parseInt($(this).val());
                });
                $($(item).parent().parent().find('.total')[0]).text(total);
                $($(item).parent().parent().find('.hidTotal')[0]).val(total)
                var stockShow = $(item).parent().parent().find('.availableStock');
                if (!isNaN(parseInt(stockShow.text()))) {
                    var current = $(item).parent().parent().find('.hidAvailableStock').val() - total;
                    stockShow.text(current);
                    if (current < 0) {
                        Alert("Stock not available !!!", 'error');
                    }

                }
            }
            //}, 0);
        });
        $(document).on('change', '.itemSelect', function (e) {
            var itemId = $(this).val();
            itemRow = $(this).parent().parent();
            if (itemId == '') {
                itemRow.find('.unit').text('');
                itemRow.find('.availableStock').text('- -');
                itemRow.find('.hidAvailableStock').val('');
            }
            $.get("/api/Service/GetCurrentStock", { ItemId: itemId }, function (data) {
                if (data.Success) {
                    itemRow.find('.unit').text(data.Data[0].Item.Unit);
                    itemRow.find('.availableStock').text(data.Data[0].Quantity - parseInt(itemRow.find('.total').text()));
                    itemRow.find('.hidAvailableStock').val(data.Data[0].Quantity);
                    itemRow.find('.qty').removeAttr('disabled');
                }
                else {
                    Alert(data.Messege);
                }
            }, "json");
        });
        $("#btnSubmit").click(function (e) {
            var itemSelect = $('.itemSelect:visible');
            if (itemSelect.length == 0) {
                Alert("Please select items to withdraw !!!", 'error');
                e.preventDefault();
                return false;
            }
            for (var i = 0; i < itemSelect.length; i++) {
                if ($(itemSelect[i]).val() == '') {
                    Alert("Either select valid items or remove please remove it !!!", 'error');
                    e.preventDefault();
                    return false;
                }
            }
            var availableStock = $('.availableStock:visible');
            for (var i = 0; i < availableStock.length; i++) {
                try {
                    var stock = parseInt($(availableStock[i]).text());
                    if (isNaN(stock) || stock < 0)
                        throw "ERROR";
                }
                catch (ex) {
                    Alert("Stock not available !!!", 'error');
                    e.preventDefault();
                    return false;
                }
            }

            var total = $('.total:visible');
            for (var i = 0; i < total.length; i++) {
                if (parseInt($(total[i]).text()) == 0) {
                    Alert("Please remove items with no withdrawal quantity !!!", 'error');
                    e.preventDefault();
                    return false;
                }
            }
        });
    });

    function ReOrder() {
        var InputItems = $('#container').find('.inputItems');
        var i = 0;
        $(InputItems).each(function () {
            $(this).find('.itemSelect').attr('name', '[' + i + '].Items.Id');
            $(this).find('.ratio1').attr('name', '[' + i + '].Ratio1');
            $(this).find('.ratio2').attr('name', '[' + i + '].Ratio2');
            $(this).find('.ratio3').attr('name', '[' + i + '].Ratio3');
            $(this).find('.qty1').attr('name', '[' + i + '].Qty1');
            $(this).find('.qty2').attr('name', '[' + i + '].Qty2');
            $(this).find('.qty3').attr('name', '[' + i + '].Qty3');
            $(this).find('.hidTotal').attr('name', '[' + i + '].TotalQty');
            i++;
        });
    }
</script>
