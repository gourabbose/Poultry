@using Poultry.Models;
@model VendorLog

@{
    ViewBag.Title = "Add Vendor Supply";
    var _itemList = (SelectList)ViewBag.ItemList;
    var _vendorList = (SelectList)ViewBag.VendorList;
}
    <style>
    .Qty, .Price {
            background: none repeat scroll 0 0 #fff;
            border: 1px solid #e2e2e2;
            color: #333;
            font-size: 1.2em;
            margin: 5px 0 6px;
            padding: 5px;
            width: 75px;
        }
    </style>
@using (Html.BeginForm())
{
    
    <h2 style="float:left">Stock >> Add >> Vendor Supply on :</h2>
    <input type="text" class="datepicker" name="Date" value="@DateTime.Now.ToString("dd-MMM-yyyy")" style="margin-top: 23px; margin-left: 5px; width:20%" />
    <p>
        <input type="button" id="AddItemInput" value="Add More Item" />
        <input type="button" id="AddChicken" value="Add Chickens" />
    </p>
    <strong>Select Vendor : </strong>
    @Html.DropDownListFor(model=>model.Vendor.Id,_vendorList,"Select Vendor")
    <br />
    <br />
    
    <div id="ChickenContainer">
    </div>
    <div>
        <div id="container" style="padding: 10px; padding-left: 15px;">
            <div class="inputItems">
                <strong>Item : </strong>
                @Html.DropDownList("Items[0].Item.Id", _itemList, "Select Item", new {@class="itemselecter" })
                <strong style="padding-left: 5px;">Quantity : </strong>
                @Html.TextBox("Items[0].Qty", "", new {  @class="Qty validate-numberonly" })
                <strong style="padding-left: 5px;">Price : </strong>
                @Html.TextBox("Items[0].Price", "", new {  @class="Price validate-numberonly" })
                <a href="javascript:void(0)" class="remove">Remove</a>
            </div>
        </div>
    </div>
    <div>
        <p>
            <strong style="padding-left: 5px;">Payment paid : </strong> 
            <input type="text" name="Payment" class="validate-numberonly"/>
        </p>
        <p>
            <strong style="padding-left: 5px;">Payment Mode : </strong> 
            <select name="PaymentMode" >
              <option value="By Cash">By Cash</option>
              <option value="By Cheque">By Cheque</option>
              <option value="Online Transfer">Online Transfer</option>
            </select> 
        </p>
        <p>
            <strong style="padding-left: 5px;">Folio No : </strong> <input type="text" name="FolioNo" />
        </p>
    </div>
    <div>
        <p>
            <input type="submit" value="Add Supply" id="btnSubmit"/>
        </p>
    </div>
}
<div style="display: none" id="temp">
    <div class="inputItems">
                <strong>Item : </strong>
                @Html.DropDownList("Items[0].Item.Id", _itemList, "Select Item", new {@class="itemselecter" })
                <strong style="padding-left: 5px;">Quantity : </strong>
                @Html.TextBox("Items[0].Qty", "", new {  @class="Qty validate-numberonly" })
                <strong style="padding-left: 5px;">Price : </strong>
                @Html.TextBox("Items[0].Price", "", new {  @class="Price validate-numberonly" })
                <a href="javascript:void(0)" class="remove">Remove</a>
            </div>
</div>
<div id="tempChicken" style="display:none">
    <div>
        <strong style="padding-left: 5px; padding-right: 5px;">Chickens : </strong>
        @Html.TextBox("ChickCount", "", new { @class="validate-numberonly" })
        <a href="javascript:void(0)" class="remove Chicken">Remove</a>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#AddItemInput').click(function () {
            $('#container').append($('#temp').html());
            ReOrder();
        });
        $('#AddChicken').click(function () {
            if ($('#ChickenContainer').find('div').length == 0) {
                $('#ChickenContainer').html($('#tempChicken').html());
                ReOrder();
            }
        });
        $(document).on('click', '.remove', function () {
            $(this).parent().remove();
            if (!$(this).hasClass('Chicken')) {
                CurrentItemNo--;
                ReOrder();
            }
        });
        $('#btnSubmit').click(function (e) {
            
            if ($('#Vendor_Id').val() == '') {
                Alert('Please select a vendor !!!','error');
                e.preventDefault();
                return false;
            }
            if ($('.inputItems:visible').length < 1 && !$('#ChickCount').is(':visible')) {
                Alert('Please add items !!!', 'error');
                e.preventDefault();
                return false;
            }
            var itemselecter = $('.itemselecter:visible');
            for (var i = 0; i < itemselecter.length; i++) {
                if ($(itemselecter[i]).val() == '') {
                    Alert('Please select all the items !!!', 'error');
                    e.preventDefault();
                    return false;
                }
            }
            var Qty = $('.Qty:visible');
            for (var i = 0; i < Qty.length; i++) {
                if ($(Qty[i]).val() == '') {
                    Alert('Please enter all the quantity fields !!!', 'error');
                    e.preventDefault();
                    return false;
                }
            }
            var Price = $('.Price:visible');
            for (var i = 0; i < Price.length; i++) {
                if ($(Price[i]).val() == '') {
                    Alert('Please enter all the price fields !!!', 'error');
                    e.preventDefault();
                    return false;
                }
            }
            if ($('#ChickCount:visible').length > 0 && $('#ChickCount:visible').val()=='') {
                Alert('Please enter chicken count !!!', 'error');
                e.preventDefault();
                return false;
            }
        });
        $(document).on('keydown', '.validate-numberonly', function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40) ||
                (e.ctrlKey)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
    });
    function getUniqueValidations() {
        setTimeout(function () {
            var list = $('#validationSummary').find('li');
            var html = '';
            list.each(function () {
                var count = 0;
                var currentVal = $(this).text();
                if (html.indexOf(currentVal) < 0) {
                    html += '<li>' + currentVal + '</li>';
                }
            });
            $('#validationSummary').unbind('DOMSubtreeModified');
            $('#validationSummary').html(html);
            setTimeout(function () {
                $('#validationSummary').on('DOMSubtreeModified', getUniqueValidations);
            }, 1000);
        }, 0);
    }
    function ReOrder() {
        var InputItems = $('#container').find('.inputItems');
        var i = 0;
        $(InputItems).each(function () {
            $(this).find('select').attr('name', 'Items[' + i + '].Item.Id');
            $(this).find('.Qty').attr('name', 'Items[' + i + '].Qty');
            $(this).find('.Price').attr('name', 'Items[' + i + '].Price');
            i++;
        });
    }
</script>


